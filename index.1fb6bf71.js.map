{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar _loop = function(i) {\n    var label = document.createElement(\"label\");\n    var input = document.createElement(\"input\");\n    var select = document.createElement(\"select\");\n    if (i !== 2) {\n        form.appendChild(label);\n        input.name = \"\".concat(headers[i].textContent);\n        input.type = i === 3 && i === 4 ? \"number\" : \"text\";\n        input.setAttribute(\"data-qa\", \"\".concat(headers[i].textContent.toLowerCase()));\n        label.textContent = \"\".concat(headers[i].textContent, \": \");\n        label.appendChild(input);\n    } else {\n        form.appendChild(label);\n        select.name = \"\".concat(headers[i].textContent);\n        select.setAttribute(\"data-qa\", \"\".concat(headers[i].textContent.toLowerCase()));\n        label.textContent = \"\".concat(headers[i].textContent, \": \");\n        label.appendChild(select);\n        var allOffices = Array.from(rows).slice(1).map(function(row) {\n            return row.cells[2].textContent;\n        });\n        var offices = _to_consumable_array(new Set(allOffices)).sort(function(a, b) {\n            return a.localeCompare(b);\n        });\n        offices.forEach(function(off) {\n            var option = document.createElement(\"option\");\n            option.value = off;\n            option.textContent = off;\n            select.appendChild(option);\n        });\n    }\n};\nvar rows = document.querySelectorAll(\"tbody tr\");\nvar headers = document.querySelectorAll(\"th\");\nvar sortDirection = 1;\nvar activeHeader = null;\nvar notification = document.createElement(\"div\");\nheaders.forEach(function(header) {\n    header.addEventListener(\"click\", function() {\n        var columnIndex = Array.from(headers).indexOf(header);\n        if (activeHeader !== header) {\n            sortDirection = 1;\n            activeHeader = header;\n        }\n        var theRows = Array.from(document.querySelectorAll(\"tr\")).slice(1, -1);\n        var values = theRows.map(function(row) {\n            var cell = row.cells[columnIndex].textContent;\n            return {\n                row: row,\n                cell: cell\n            };\n        });\n        var sortedValues = values.sort(function(a, b) {\n            if (a.cell[0] === \"$\" && b.cell[0] === \"$\") {\n                var first = parseFloat(a.cell.replace(/[$,]/g, \"\"));\n                var second = parseFloat(b.cell.replace(/[$,]/g, \"\"));\n                return (first - second) * sortDirection;\n            } else if (!isNaN(a.cell) && !isNaN(b.cell)) return (parseFloat(a.cell) - parseFloat(b.cell)) * sortDirection;\n            else return a.cell.localeCompare(b.cell) * sortDirection;\n        });\n        var tableBody = document.querySelector(\"tbody\");\n        tableBody.innerHTML = \"\";\n        sortedValues.forEach(function(param) {\n            var row = param.row;\n            tableBody.appendChild(row);\n        });\n        sortDirection *= -1;\n    });\n});\nrows.forEach(function(row) {\n    row.addEventListener(\"click\", function() {\n        rows.forEach(function(r) {\n            return r.classList.remove(\"active\");\n        });\n        row.classList.add(\"active\");\n    });\n});\nvar table = document.querySelector(\"table\");\nvar form = document.createElement(\"form\");\nvar saveButton = document.createElement(\"button\");\ntable.insertAdjacentElement(\"afterend\", form);\nform.classList.add(\"new-employee-form\");\nfor(var i = 0; i < headers.length - 5; i++)_loop(i);\nform.appendChild(saveButton);\nsaveButton.textContent = \"Save to table\";\nvar title = document.createElement(\"p\");\nvar description = document.createElement(\"p\");\nsaveButton.addEventListener(\"click\", function(saving) {\n    saving.preventDefault();\n    var inputName = document.querySelector('[data-qa=\"name\"]').value;\n    var inputPosition = document.querySelector('[data-qa=\"position\"]').value;\n    var inputOffice = document.querySelector('[data-qa=\"office\"]').value;\n    var inputAge = document.querySelector('[data-qa=\"age\"]').value;\n    var inputSal = document.querySelector('[data-qa=\"salary\"]').value;\n    var parsedSalary = parseFloat(inputSal);\n    var trueSalary = \"$\".concat(parseFloat(parsedSalary).toLocaleString(\"en-US\"));\n    var newRow = document.createElement(\"tr\");\n    var newData = [\n        inputName,\n        inputPosition,\n        inputOffice,\n        inputAge,\n        trueSalary\n    ];\n    var notificationType = \"\";\n    var notificationMessage = \"\";\n    if (inputName.length <= 3) {\n        notificationType = \"error\";\n        notificationMessage = \"The name is too short\";\n    } else if (inputAge < 18 || inputAge > 90) {\n        notificationType = \"error\";\n        notificationMessage = \"The age is invalid\";\n    } else if (newData.some(function(data) {\n        return data === \"\";\n    })) {\n        notificationType = \"error\";\n        notificationMessage = \"Fill all inputs\";\n    } else if (isNaN(parsedSalary)) {\n        notificationType = \"error\";\n        notificationMessage = \"Fill all inputs\";\n    } else {\n        newData.forEach(function(data) {\n            var newCell = document.createElement(\"td\");\n            newCell.textContent = data;\n            newRow.appendChild(newCell);\n        });\n        var tableBody = document.querySelector(\"tbody\");\n        tableBody.appendChild(newRow);\n        form.reset();\n        notificationType = \"success\";\n        notificationMessage = \"The employee is added to the table\";\n    }\n    title.classList.add(\"title\");\n    title.textContent = \"\".concat(notificationType);\n    description.textContent = \"\".concat(notificationMessage);\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.className = \"notification \".concat(notificationType);\n    document.body.appendChild(notification);\n    notification.appendChild(title);\n    notification.appendChild(description);\n    setTimeout(function() {\n        document.body.removeChild(notification);\n    }, 3000);\n});\n\n//# sourceMappingURL=index.1fb6bf71.js.map\n","'use strict';\n\nconst rows = document.querySelectorAll('tbody tr');\nconst headers = document.querySelectorAll('th');\nlet sortDirection = 1;\nlet activeHeader = null;\nconst notification = document.createElement('div');\n\nheaders.forEach((header) => {\n  header.addEventListener('click', () => {\n    const columnIndex = Array.from(headers).indexOf(header);\n\n    if (activeHeader !== header) {\n      sortDirection = 1;\n      activeHeader = header;\n    }\n\n    const theRows = Array.from(document.querySelectorAll('tr')).slice(1, -1);\n\n    const values = theRows.map((row) => {\n      const cell = row.cells[columnIndex].textContent;\n\n      return { row, cell };\n    });\n\n    const sortedValues = values.sort((a, b) => {\n      if (a.cell[0] === '$' && b.cell[0] === '$') {\n        const first = parseFloat(a.cell.replace(/[$,]/g, ''));\n        const second = parseFloat(b.cell.replace(/[$,]/g, ''));\n\n        return (first - second) * sortDirection;\n      } else if (!isNaN(a.cell) && !isNaN(b.cell)) {\n        return (parseFloat(a.cell) - parseFloat(b.cell)) * sortDirection;\n      } else {\n        return a.cell.localeCompare(b.cell) * sortDirection;\n      }\n    });\n\n    const tableBody = document.querySelector('tbody');\n\n    tableBody.innerHTML = '';\n\n    sortedValues.forEach(({ row }) => {\n      tableBody.appendChild(row);\n    });\n\n    sortDirection *= -1;\n  });\n});\n\nrows.forEach((row) => {\n  row.addEventListener('click', () => {\n    rows.forEach((r) => r.classList.remove('active'));\n\n    row.classList.add('active');\n  });\n});\n\nconst table = document.querySelector('table');\nconst form = document.createElement('form');\nconst saveButton = document.createElement('button');\n\ntable.insertAdjacentElement('afterend', form);\nform.classList.add('new-employee-form');\n\nfor (let i = 0; i < headers.length - 5; i++) {\n  const label = document.createElement('label');\n  const input = document.createElement('input');\n  const select = document.createElement('select');\n\n  if (i !== 2) {\n    form.appendChild(label);\n    input.name = `${headers[i].textContent}`;\n    input.type = i === 3 && i === 4 ? 'number' : 'text';\n    input.setAttribute('data-qa', `${headers[i].textContent.toLowerCase()}`);\n    label.textContent = `${headers[i].textContent}: `;\n    label.appendChild(input);\n  } else {\n    form.appendChild(label);\n    select.name = `${headers[i].textContent}`;\n    select.setAttribute('data-qa', `${headers[i].textContent.toLowerCase()}`);\n    label.textContent = `${headers[i].textContent}: `;\n    label.appendChild(select);\n\n    const allOffices = Array.from(rows)\n      .slice(1)\n      .map((row) => row.cells[2].textContent);\n    const offices = [...new Set(allOffices)].sort((a, b) => a.localeCompare(b));\n\n    offices.forEach((off) => {\n      const option = document.createElement('option');\n\n      option.value = off;\n      option.textContent = off;\n      select.appendChild(option);\n    });\n  }\n}\n\nform.appendChild(saveButton);\nsaveButton.textContent = 'Save to table';\n\nconst title = document.createElement('p');\nconst description = document.createElement('p');\n\nsaveButton.addEventListener('click', (saving) => {\n  saving.preventDefault();\n\n  const inputName = document.querySelector('[data-qa=\"name\"]').value;\n  const inputPosition = document.querySelector('[data-qa=\"position\"]').value;\n  const inputOffice = document.querySelector('[data-qa=\"office\"]').value;\n  const inputAge = document.querySelector('[data-qa=\"age\"]').value;\n  const inputSal = document.querySelector('[data-qa=\"salary\"]').value;\n  const parsedSalary = parseFloat(inputSal);\n  const trueSalary = `$${parseFloat(parsedSalary).toLocaleString('en-US')}`;\n  const newRow = document.createElement('tr');\n  const newData = [inputName, inputPosition, inputOffice, inputAge, trueSalary];\n\n  let notificationType = '';\n  let notificationMessage = '';\n\n  if (inputName.length <= 3) {\n    notificationType = 'error';\n    notificationMessage = 'The name is too short';\n  } else if (inputAge < 18 || inputAge > 90) {\n    notificationType = 'error';\n    notificationMessage = 'The age is invalid';\n  } else if (newData.some((data) => data === '')) {\n    notificationType = 'error';\n    notificationMessage = 'Fill all inputs';\n  } else if (isNaN(parsedSalary)) {\n    notificationType = 'error';\n    notificationMessage = 'Fill all inputs';\n  } else {\n    newData.forEach((data) => {\n      const newCell = document.createElement('td');\n\n      newCell.textContent = data;\n      newRow.appendChild(newCell);\n    });\n\n    const tableBody = document.querySelector('tbody');\n\n    tableBody.appendChild(newRow);\n    form.reset();\n    notificationType = 'success';\n    notificationMessage = 'The employee is added to the table';\n  }\n\n  title.classList.add('title');\n  title.textContent = `${notificationType}`;\n  description.textContent = `${notificationMessage}`;\n  notification.setAttribute('data-qa', 'notification');\n  notification.className = `notification ${notificationType}`;\n  document.body.appendChild(notification);\n  notification.appendChild(title);\n  notification.appendChild(description);\n\n  setTimeout(() => {\n    document.body.removeChild(notification);\n  }, 3000);\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","rows","document","querySelectorAll","headers","sortDirection","activeHeader","notification","createElement","forEach","header","addEventListener","columnIndex","from","indexOf","sortedValues","values","theRows","slice","map","row","cell","cells","textContent","sort","a","b","first","parseFloat","replace","isNaN","localeCompare","tableBody","querySelector","innerHTML","param","appendChild","r","classList","remove","add","table","form","saveButton","insertAdjacentElement","_loop","label","input","select","name","concat","type","setAttribute","toLowerCase","offices","_to_consumable_array","_array_without_holes","isArray","Set","_iterable_to_array","iter","Symbol","iterator","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","constructor","test","_non_iterable_spread","TypeError","off","option","value","title","description","saving","preventDefault","inputName","inputPosition","inputOffice","inputAge","parsedSalary","trueSalary","toLocaleString","newRow","newData","notificationType","notificationMessage","some","data","newCell","reset","className","body","setTimeout","removeChild"],"version":3,"file":"index.1fb6bf71.js.map"}